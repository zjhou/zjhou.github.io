(this.webpackJsonp=this.webpackJsonp||[]).push([[7,11],{"97er":function(t,n,e){"use strict";e.r(n);var r=e("8RZD"),o={posts:"".concat("https://api.zjh.im","/posts"),post:"".concat("https://api.zjh.im","/posts/{0}"),exec:"".concat("https://api.zjh.im","/terminal/exec/{0}")};var a=function(){return Object(r.u)(o.posts,"GET")};function c(t,n,e,r,o,a,c){try{var i=t[a](c),s=i.value}catch(t){return void e(t)}i.done?n(s):Promise.resolve(s).then(r,o)}var i,s,u=Object(r.e)("ls","ls","list all post titles"),p=function(t){var n=t.title,e=t._id;return'<span class="command" data-cmd="cat '.concat(n,' | tohtml" data-id="').concat(e,'">').concat(n,"</span>")},f={handler:(i=regeneratorRuntime.mark((function t(){var n;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,a();case 2:return(n=t.sent).forEach((function(t){var n=t.title,e=t._id;r.w.set(n,e)})),t.abrupt("return",n.map(p).join(" · "));case 5:case"end":return t.stop()}}),t)})),s=function(){var t=this,n=arguments;return new Promise((function(e,r){var o=i.apply(t,n);function a(t){c(o,e,r,a,s,"next",t)}function s(t){c(o,e,r,a,s,"throw",t)}a(void 0)}))},function(){return s.apply(this,arguments)}),doc:u},m=e("M55E"),h=e.n(m),l=(e("v/fD"),new h.a.Converter({openLinksInNewWindow:!0,simpleLineBreaks:!0}));l.setFlavor("github"),window.converter=l;var v={handler:function(t,n,e,r){var o,a=r.restParams,c=r.fromPipe;return{html:(o=l.makeHtml(c||a),'<div class="markdown-body">'.concat(o,"</div>"))}},doc:Object(r.e)("tohtml -- parse markdown into html format","tohtml [markdown string]","NULL")};function d(t,n,e,r,o,a,c){try{var i=t[a](c),s=i.value}catch(t){return void e(t)}i.done?n(s):Promise.resolve(s).then(r,o)}var w=Object(r.e)("cat","cat <post title>","show post content"),b={handler:function(){var t=function(t){return function(){var n=this,e=arguments;return new Promise((function(r,o){var a=t.apply(n,e);function c(t){d(a,r,o,c,i,"next",t)}function i(t){d(a,r,o,c,i,"throw",t)}c(void 0)}))}}(regeneratorRuntime.mark((function t(n,e,a,c){var i,s,u,p;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(i=c.restParams,s=r.w.get(i.trim())){t.next=4;break}return t.abrupt("return","");case 4:return t.next=6,n=s,Object(r.u)(Object(r.f)(o.post,n),"GET");case 6:return u=t.sent,p=u.content,t.abrupt("return",p);case 9:case"end":return t.stop()}var n}),t)})));return function(n,e,r,o){return t.apply(this,arguments)}}(),doc:w},j={moon:function(){Object(r.j)("https://fufu.im")},about:function(){Object(r.o)("github","https://github.com/zjhou");return"略略略略略 *<]:{)"},ls:f,cat:b,tohtml:v,exit:function(){window.Terminal.destroy()}};n.default=j},M55E:function(t,n,e){t.exports=e("bS/x")(50)},"v/fD":function(t,n,e){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,