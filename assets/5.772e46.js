(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"T79/":function(n,e,t){(n.exports=t("I1BE")(!1)).push([n.i,"@charset \"UTF-8\";\n#gui.editor.on {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background: #fff;\n  z-index: 2; }\n\n.edit-area textarea {\n  width: 100%;\n  height: 100%;\n  border: none;\n  resize: none;\n  outline: none;\n  padding: 10px; }\n\n.editor-wrapper {\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  display: flex; }\n\n.edit-area {\n  flex: 1 1 50%;\n  border-right: solid 1px #f1f1f1;\n  /* &:after,\n    &:before {\n        position: absolute;\n        bottom: 0;\n        font-size: 50px;\n        color: #f1f1f1;\n        z-index: -1;\n    }\n\n    &:before {\n        right: 50%;\n        content: 'ctrl + s 保存';\n    }\n\n    &:after{\n        left: 50%;\n        content: 'ctrl + c 退出';\n    } */ }\n\n.preview-area {\n  flex: 1 1 50%;\n  padding: 10px;\n  overflow: auto;\n  background: #f1f1f1; }\n\n.actions {\n  position: absolute;\n  bottom: 0; }\n",""])},gXRL:function(n,e,t){var r=t("T79/");"string"==typeof r&&(r=[[n.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t("aET+")(r,o);r.locals&&(n.exports=r.locals)},zsIg:function(n,e,t){"use strict";t.r(e);t("gXRL");var r=t("8RZD"),o=function(n,e,t){var o=window.converter.makeHtml(n),a=Object(r.a)("#gui"),i=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=Object(r.a)(n);o.innerHTML='\n    <div class="editor-wrapper">\n      <div class="edit-area">\n          <textarea class="editor">'.concat(e,'</textarea>\n      </div>\n      <div class="preview-area"><div class="markdown-body">').concat(t,"</div></div>\n    </div> \n  "),o.classList.add("editor"),o.classList.add("on");var a=Object(r.a)("textarea.editor"),i=Object(r.a)(".preview-area");return a.focus(),{$editor:a,$preview:i}}("#gui",n,o),c=i.$editor,s=i.$preview;c.addEventListener("keydown",(function(n){var t=n.key,r=n.ctrlKey,o=r&&"c"===t;if(r&&"s"===t)return e(c.value),a.classList.remove("on"),void(a.innerHTML="");o&&(e(""),a.classList.remove("on"),a.innerHTML="")})),c.addEventListener("input",(function(n){s.innerHTML=window.converter.makeHtml(n.target.value)}))};function a(n,e,t,r,o,a,i){try{var c=n[a](i),s=c.value}catch(n){return void t(n)}c.done?e(s):Promise.resolve(s).then(r,o)}function i(n){return function(){var e=this,t=arguments;return new Promise((function(r,o){var i=n.apply(e,t);function c(n){a(i,r,o,c,s,"next",n)}function s(n){a(i,r,o,c,s,"throw",n)}c(void 0)}))}}var c="https://api.github.com/repos/zjhou/notes/contents/_posts",s=localStorage.getItem("ghtoken"),u=function(){var n=i(regeneratorRuntime.mark((function n(){var e;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(e=r.z.get("notes")){n.next=6;break}return n.next=4,Object(r.v)(c,"GET");case 4:e=n.sent,r.z.set("notes",e);case 6:return n.abrupt("return",e);case 7:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}(),d=function(n,e,t){if(!s)return Promise.reject("please set PAT first!");var o="".concat(t||Object(r.B)(),"-").concat(n,".md"),a="".concat(c,"/").concat(o),i={message:"add note: ".concat(o),committer:{name:"zjhou",email:"z@zjh.im"},content:r.d.encode(e)};return Object(r.v)(a,"PUT",i,s)},f=function(){var n=i(regeneratorRuntime.mark((function n(e,t){var o,a,i,d,f,v;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(s){n.next=2;break}return n.abrupt("return",Promise.reject("please set PAT first!"));case 2:return n.next=4,u();case 4:if(o=n.sent,a=o.filter((function(n){return n.name.includes(e)}))[0]){n.next=8;break}throw"无法找到笔记";case 8:return i=a.name,d=a.sha,f="".concat(c,"/").concat(i),v={message:"update note: ".concat(i),content:r.d.encode(t),sha:d,committer:{name:"zjhou",email:"z@zjh.im"}},n.abrupt("return",Object(r.v)(f,"PUT",v,s));case 12:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}();e.default={shortopts:"n:u",handler:function(n,e,t,r){var a=r.restParams,i=r.fromPipe;return new Promise((function(e,t){var r=n.n,c=n.u;r?o(c?i:"",(function(n){var o=c?"更新":"添加";(c?f:d)(r,n).then((function(){e("笔记".concat(o,"成功！"))})).catch(t)}),t):o(a||i,e,t)}))}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,